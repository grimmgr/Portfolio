{"version":3,"sources":["utils/displayCardContext.js","utils/widthContext.js","components/Header/index.js","components/Background/index.js","pages/Welcome.js","components/PortfolioCard/index.js","pages/Portfolio.js","pages/Contact.js","pages/Main.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayCardContext","React","createContext","useDisplayCard","useContext","DisplayCardProvider","children","useState","displayCard","setDisplayCard","Provider","value","WidthContext","useWidth","WidthProvider","window","innerWidth","width","setWidth","useEffect","timeoutId","reSize","clearTimeout","setTimeout","addEventListener","removeEventListener","Header","style","transform","className","href","Background","playsInline","autoPlay","muted","poster","id","src","type","Welcome","PortfolioCard","props","cardPadding","cardTop","cardRight","name","link","linkDisplay","role","description","video","image","stackIndex","logo","top","right","screenWidth","zIndex","setZIndex","cardWidth","setCardWidth","flipCard","setFlipCard","cardRef","useRef","nodeRef","cardStyles","height","padding","CSSTransition","in","timeout","classNames","ref","onClick","alt","onEnter","onEntered","current","scrollIntoView","block","onExit","unmountOnExit","target","rel","controls","Portfolio","topCard","portfolioContainer","overflow","scroll","portfolioJSON","map","project","link_display","stack_index","behavior","Contact","Main","styles","bottom","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9c3dccb.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\n\nconst DisplayCardContext = React.createContext();\n\nexport const useDisplayCard = () => {\n    return useContext(DisplayCardContext);\n};\n\nexport const DisplayCardProvider = ({ children }) => {\n    const [ displayCard, setDisplayCard]  = useState(false);\n\n    return (\n        <DisplayCardContext.Provider value={{ displayCard, setDisplayCard }}>\n            { children }\n        </DisplayCardContext.Provider>\n    );\n};","import React, { useState, useEffect, useContext } from 'react';\n\nconst WidthContext = React.createContext();\n\nexport const useWidth = () => {\n    return useContext(WidthContext);\n}\n\nexport const WidthProvider =({ children }) => {\n    const [width, setWidth] = useState(typeof window !== 'undefined' ? window.innerWidth : 400);\n\n    useEffect(() => {\n        let timeoutId = null;\n        const reSize = () => {\n            clearTimeout(timeoutId);\n            timeoutId = setTimeout(() => setWidth(window.innerWidth), 150);\n        };\n        window.addEventListener('resize', reSize);\n\n        return () => {\n            window.removeEventListener('resize', reSize);\n        }\n    }, []);\n\n    return (\n        <WidthContext.Provider value={ { width, setWidth } }>\n            { children }\n        </WidthContext.Provider>\n    )\n}","import React from 'react';\nimport { useDisplayCard } from '../../utils/displayCardContext';\nimport { useWidth } from '../../utils/widthContext';\nimport './style.css';\n\nexport const Header = () => {\n    \n    const displayCard = useDisplayCard().displayCard;\n    const width = useWidth().width;\n\n    return (\n        <header style={ (displayCard === true && width < 750) ? { transform: 'translateY(-120px)' } : { transform: 'translateY(0)'} } >\n            <h1>GRETCHEN GRIMM</h1>\n            <nav>\n                <ul className='nav-links'>\n                    <li><a className='nav-link' href=\"#portfolio\">portfolio</a></li>\n                    <li><a className='nav-link' href=\"#contact\">contact</a></li>\n                </ul>\n            </nav>\n            <div className='header-center-line'></div>\n        </header>\n    );\n};","import React from 'react';\nimport './style.css';\n\nexport const Background = () => {\n    return (\n        <div>\n            <video playsInline autoPlay muted poster=\"assets/images/portfolio_background_poster.jpg\" id=\"backgroundVideo\">\n                <source src=\"assets/video/portfolio_background_720.webm\" type=\"video/webm\" />\n                <source src=\"assets/video/portfolio_background_720.mp4\" type=\"video/mp4\" />\n            </video>\n\n            <div id=\"background\"></div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const Welcome = () => {\n    return (\n        <section id='welcome'>\n            <p className='emoji'>┬┴┤･ω･)ﾉ</p>\n            <p className= 'special'>welcome</p>\n        </section>\n    );\n};","import React, { useState, useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './style.css';\nimport { useDisplayCard } from '../../utils/displayCardContext';\nimport { useWidth } from '../../utils/widthContext'\n\nexport const PortfolioCard = (props) => {\n    const { id, name, link, linkDisplay, role, description, video, image, stackIndex, logo, top, right } = props;\n    const screenWidth = useWidth().width;\n    const [ zIndex, setZIndex ] = useState(stackIndex);\n    const [ cardWidth, setCardWidth ] = useState( screenWidth < 750 ? 250 : 270 );\n    const [ flipCard, setFlipCard ] = useState(false);\n    const setDisplayCard = useDisplayCard().setDisplayCard;\n    const cardRef = useRef(null);\n    const nodeRef = useRef(null);\n\n    const grow = () => {\n        setCardWidth('100%');\n        setZIndex(10);\n        setDisplayCard(true);\n    }\n\n    const shrink = () => {\n        setCardWidth( screenWidth < 750 ? 250 : 270 );\n        setZIndex(stackIndex);\n        setDisplayCard(false);\n    }\n\n    const scrollCardToView = () => { \n        cardRef.current.scrollIntoView( { block: 'start' });\n    }\n\n    let cardPadding;\n    let cardTop;\n    let cardRight;\n    // let cardRotation;\n\n    if ( flipCard ) {\n        cardPadding = 0;\n        cardTop = 0;\n        cardRight = 0;\n        // cardRotation = 0;\n\n    } else { \n        cardPadding = '10px';\n        cardTop = `${top}px`;\n        cardRight = `${right}px`;\n    }\n\n    // cardTop = `${(Math.floor(Math.random() * (7) - 3)) * 5}px`;\n    // cardRight = `${(Math.floor(Math.random() * (7) - 3)) * 5}px`;\n    // cardRotation = Math.floor(Math.random() * (21) - 10);\n\n    const cardStyles = { \n        width: cardWidth, \n        height: cardWidth, \n        padding: cardPadding,\n        top: cardTop,\n        right: cardRight\n    }\n\n\n    return (\n\n            <div id={`card-wrapper${id}`} className='card-wrapper' style={{ zIndex: zIndex }} >\n                <CSSTransition \n                    in={!flipCard}\n                    timeout={800}\n                    classNames='flip'\n                    >\n                    <div id={`card${id}`} className='card' style={ cardStyles } ref={cardRef} >\n                        <div id={`card-front${id}`} className='card-front' onClick={ () => setFlipCard(true) }>\n                            { logo && <img id={`logo${id}`} className='project-name' src={logo} alt='project logo' /> }\n                            <h3 className='project-name'>{name}</h3>\n                        </div>\n                        <CSSTransition\n                            in={flipCard}\n                            timeout={800}\n                            classNames='card-back'\n                            nodeRef={nodeRef}\n                            onEnter={grow}\n                            onEntered={scrollCardToView}\n                            onExit={shrink}\n                            unmountOnExit\n                            >\n                            <div id={`card-back${id}`} className='card-back' ref={nodeRef}>\n                                <p className='close' onClick={ () => setFlipCard(false) }>X</p>\n                                <div className='card-back-content'>\n                                    <div className='title-wrapper'>\n                                        <a href={link} target='_blank' rel='noreferrer'><h4>{linkDisplay}</h4></a>\n                                    </div>\n                                    <p className='role'>{role}</p>\n                                    <div className='content-flex-container'>\n                                        <p className='description'>{description}</p>\n                                        <div className='demo-container'>\n                                            { props.video ?\n                                                <video className='demo-vid' controls >\n                                                    <source src={video} type='video/mp4'></source>\n                                                </video>\n                                            :\n                                                <img className='demo-pic' src={image} alt='still of project' />\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </CSSTransition>\n                    </div>\n                </CSSTransition>\n            </div>\n    )\n};","import React, { useRef } from 'react';\n// import { useWidth } from '../utils/widthContext';\nimport { useDisplayCard } from '../utils/displayCardContext';\nimport { PortfolioCard } from '../components/PortfolioCard';\nimport portfolioJSON from '../portfolio.json';\n\nexport const Portfolio = () => {\n\n    const displayCard = useDisplayCard().displayCard;\n    const topCard = useRef(null);\n    const portfolioContainer = useRef(null);\n\n    const liftCover = () => {\n        portfolioContainer.current.scroll(0, 500);\n    }\n\n    const scrollToTop = () => {\n        topCard.current.scrollIntoView( { behavior: 'smooth', block: 'end' } );\n    }\n\n    return (\n        <section id='portfolio'>\n            {/* { (width >= 700) &&\n                 <div className='portfolio-header'>\n                    <h2>PORTFOLIO</h2>\n                </div>\n            } */}\n            <div className='portfolio-container' ref={portfolioContainer} style={ (displayCard === true) ? { overflow: 'hidden' } : { overflow: 'scroll'} } >\n                <div id='card-wrapper0' className='card-wrapper'>\n                    <div id='card0' className='card' ref={topCard}>\n                        <div className='cover' onClick={ liftCover }>\n                            <p className='symbol' id='arrow'>&#187;</p>\n                            <h2>PORTFOLIO</h2>\n                        </div>\n                    </div>\n                </div>\n                { portfolioJSON.map(project => (\n                    <PortfolioCard\n                        key={project.id}\n                        id={project.id}\n                        name={project.name}\n                        link={project.link}\n                        linkDisplay={project.link_display}\n                        role={project.role}\n                        description={project.description}\n                        video={project.video}\n                        image={project.image}\n                        stackIndex={project.stack_index}\n                        logo={project.logo}\n                        top={project.top}\n                        right={project.right}\n                    />\n                ))}\n                \n                <div id='card-wrapper7' className='card-wrapper'>\n                    <div id='card7' className='card'>\n                        <div className='cover' onClick={scrollToTop}>\n                            <p className='symbol' id='arrow'>&#187;</p>\n                            <h2>BACK TO TOP</h2>\n                        </div>\n                    </div>\n                </div>\n                {/* <div id='card-wrapper7' className='card-wrapper'>\n                    <div className='back-to-top' onClick={scrollToTop}>\n                        <p className='symbol' id='arrow'>&#187;</p>\n                        <h2>BACK TO TOP</h2>\n                    </div>\n                </div> */}\n            </div>\n        </section>\n    );\n};","import React from 'react';\n\nexport const Contact = () => {\n    return (\n        <section id='contact'>\n            <p className= 'special'>email me..</p>\n            <p className='emoji special'>..〆(・∀・)</p>\n            <p className= 'special'><a className='email-link' href='mailto: ggrimm33@gmail.com' target='_blank' rel='noreferrer'>ggrimm33@gmail.com</a></p>\n        </section>\n    )\n}","import React from 'react';\nimport { Welcome } from './Welcome';\nimport { Portfolio } from './Portfolio';\nimport { Contact } from './Contact';\nimport { useDisplayCard } from '../utils/displayCardContext';\nimport { useWidth } from '../utils/widthContext';\n\nexport const Main = () => {\n\n    const displayCard = useDisplayCard().displayCard;\n    const width = useWidth().width;\n    let styles;\n\n    if ( displayCard === true && width < 750 ) {\n        styles = { \n            overflow: 'hidden',\n            top: 0,\n            bottom: 0\n        }\n    } else if ( displayCard === true && width >= 750 ) {\n        styles = { \n            overflow: 'hidden',\n            top: '120px',\n            bottom: 0\n        }\n    } else {\n\n        styles = { \n            overflow: 'scroll',\n            top: '120px',\n            bottom: '40px'\n        }\n    }\n\n    return (\n        <main style={ styles } >\n            <Welcome />\n            <Portfolio />\n            <Contact />\n        </main>\n    );\n};","import React from 'react';\nimport { useDisplayCard } from '../../utils/displayCardContext';\nimport { useWidth } from '../../utils/widthContext';\nimport './style.css';\n\nexport const Footer = () => {\n\n    const displayCard = useDisplayCard().displayCard;\n    const width = useWidth().width;\n\n    return (\n        <footer style={ (displayCard === true && width < 750) ? { transform: 'translateY(40px)' } : { transform: 'translateY(0)'} } >\n            <a href='https://www.instagram.com/_instagretch_/' target='_blank' rel='noreferrer'><i className='fab fa-instagram icon'></i></a>\n            <a href='https://www.linkedin.com/in/gretchen-grimm-75b6391aa/  'target='blank'><i className='fab fa-linkedin icon'></i></a> \n            <a href='https://github.com/grimmgr' target='_blank' rel='noreferrer'><i className='fab  fa-github icon'></i></a>\n            <a href='mailto: ggrimm33@gmail.com' target='_blank' rel='noreferrer'><i className='far fa-envelope icon'></i></a>\n        </footer>\n    );\n};","// import logo from './logo.svg';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Background } from './components/Background';\nimport { Main } from './pages/Main';\nimport { Footer } from './components/Footer';\nimport { DisplayCardProvider } from './utils/displayCardContext'; \nimport { WidthProvider } from './utils/widthContext';\n\nconst App = () => {\n  return (\n    <>\n        <WidthProvider>\n            <DisplayCardProvider>\n                <Background />\n                <Header />\n                <Main />\n                <Footer />\n            </DisplayCardProvider>\n        </WidthProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}